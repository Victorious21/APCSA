import javax.swing.JOptionPane;

class Main
{


  public static void main(String[] args)
  {
    int password = 450;
    String position = "manager";

    String input1 = JOptionPane.showInputDialog("Please enter your income");
    String input2 = JOptionPane.showInputDialog("Please enter single or married");
    String input3 = JOptionPane.showInputDialog("Please enter your password: ");
    String input4 = JOptionPane.showInputDialog("Please enter your position: ");
    String input5 = JOptionPane.showInputDialog("Please enter your SSN");


    int income = Integer.parseInt(input1);
    int userPW = Integer.parseInt(input3);
    int ssn = Integer.parseInt(input5);

    if(!(password == userPW && input4.equalsIgnoreCase("manager")))
    {
      System.out.println("Access Denied");
      System.exit(0);
    }

    //short circuit evaluation 
    if(income < 0 || income > 100000000)
    {
      System.out.println("Improper Income Input");
      System.exit(0);
    }

    TaxReturn client1 = new TaxReturn(income, input2, ssn);

    System.out.println(client1.getSSN() + " : \nYou owe: " + client1.getTax());

    TaxReturn client2 = new TaxReturn(45000, "single", 990);

    System.out.println(client2.getSSN() + " : \nYou owe: " + client2.getTax());

    TaxReturn client3 = new TaxReturn(45000, "single", 990);

    //boolean sameClient = (100==100);
    //boolean sameClient = (client2 == client3);

    boolean sameClient = (client1.equals(client2));
    System.out.println("Same client as last year? " + sameClient);
  }
}

----------------------------------------------------------------------

public class TaxReturn2
{
  double income;
  String status;
  int SSN;
  //tax rates
  private static final double RATE1 = 0.15;
  private static final double RATE2 = 0.20;
  private static final double RATE3 = 0.28;
  private static final double RATE4 = 0.37;

  private static final double SINGLE_BRACKET1 = 21000;
  private static final double SINGLE_BRACKET2 = 41400;
  private static final double SINGLE_BRACKET3 = 75670;
  private static final double SINGLE_BRACKET4 = 91340;

  private static final double MARRIED_BRACKET1 = 21000;
  private static final double MARRIED_BRACKET2 = 51400;
  private static final double MARRIED_BRACKET3 = 85670;
  private static final double MARRIED_BRACKET4 = 101340;

/*
 * Creates taxreturn object
 * @param anIncome taxpayer's income
 * @param status either Single or Married
*/
  public TaxReturn(double anIncome, String Status, int ssn)
  {
    this.income = anIncome;
    this.status = Status;
    this.SSN = ssn;
  }

  public int getSSN()
  {
    return SSN;
  }

  public double getTax()
  {
    double tax = 0;

    if(status.equalsIgnoreCase("married") || status.equalsIgnoreCase("m")) 
    {
      if(income <= MARRIED_BRACKET1)
      {
        tax = income*RATE1;
      }

      else if(income <= MARRIED_BRACKET2)
      {
        tax = RATE1*MARRIED_BRACKET1 + RATE2 * (income - MARRIED_BRACKET1);
      }

      else if(income <= MARRIED_BRACKET3)
      {
        tax = RATE1*MARRIED_BRACKET1 + RATE2 * (MARRIED_BRACKET2 - MARRIED_BRACKET1) + RATE3*(MARRIED_BRACKET3 - MARRIED_BRACKET2);
      }

      else
      {
        tax = RATE1*MARRIED_BRACKET1 + RATE2 * (MARRIED_BRACKET2 - MARRIED_BRACKET1) + RATE3*(MARRIED_BRACKET3 - MARRIED_BRACKET2) + RATE4*(income - MARRIED_BRACKET4);
      }
    }
    
    else if(status.equalsIgnoreCase("single") || status.equalsIgnoreCase("s"))
    {
      if (income <= SINGLE_BRACKET1)
      {
        tax = income + RATE1;
      }
      else if (income <= SINGLE_BRACKET2)
      {
        tax = RATE1 * SINGLE_BRACKET1 + RATE2 * (income - SINGLE_BRACKET1);
      }
      else if (income <= SINGLE_BRACKET3)
      {
        tax = RATE1 * SINGLE_BRACKET1 + RATE2 * (income - SINGLE_BRACKET2 - SINGLE_BRACKET1) + RATE3 * (income - SINGLE_BRACKET2);
      else if (income <= SINGLE_BRACKET2)
      {
        tax = RATE1 * SINGLE_BRACKET1 + RATE2 * (income - SINGLE_BRACKET1);
      }
      else if (income <= SINGLE_BRACKET3)
      {
        tax = RATE1 * SINGLE_BRACKET1 + RATE2 * (income - SINGLE_BRACKET2 - SINGLE_BRACKET1) + RATE3 * (income - SINGLE_BRACKET2);
      }
      else
      {
        tax = RATE1 * SINGLE_BRACKET1 + RATE2 * (income - SINGLE_BRACKET2 - SINGLE_BRACKET1) + RATE3 * (SINGLE_BRACKET3 - SINGLE_BRACKET2) + RATE4 * (income - SINGLE_BRACKET4);
      }
    }

    else
    {
      System.out.println("It looks like you have a marital status input error");
    }
    return tax;
  }

  //@override
  public boolean equals(TaxReturn c)
  {
    return (this.getSSN() == c.getSSN() && (this.income == c.income));
  }
}
